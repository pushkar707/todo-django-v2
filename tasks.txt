Built-in django model for users -/
enums ways in models without textchoices -/
relations in SQL - /
default related_name in models - /
Joins in django ORM - /
ModelSerializer -> Serializer -/
started_on < completed_on (validations on status value) -/
Primary keys as uuid(advantage and disadvantage) -/
routing in DRF 
Modelviewset -> ApiView -/
Architecture of django -/
API level validation (pydantic)
GIL in python, drawbacks of async in python -/

diff in null and blank -/
check migrations and undertand DB layer and application layer 
migration count -/

Logs models (generated through signals)
-> if todo contains any non-allowed words -> todo_id, log, -/

---------------------------------------------------------------------------
select_related and prefetch_related -/
evaluation of queries .get, first, all, queryset methods
model level valuation for created_on < completed_on
reverse migration
API to create banned words
API to get logs (group by users, count of total defaults by user)
API to ban user
automatically ban user after 15 defaults


recurring on new task should be created (cron job)