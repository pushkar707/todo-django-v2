# Generated by Django 5.1.7 on 2025-03-11 11:21

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BanWords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.TextField()),
                ('description', models.TextField(null=True)),
                ('status', models.IntegerField(choices=[(1, 'Created'), (2, 'Working'), (3, 'Completed')], default=1)),
                ('priority', models.IntegerField(null=True)),
                ('created_on', models.DateTimeField(default=datetime.datetime.now)),
                ('started_on', models.DateTimeField(null=True)),
                ('completed_on', models.DateTimeField(null=True)),
                ('due_on', models.DateTimeField(null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('labels', models.ManyToManyField(to='todo.label')),
                ('logs', models.ManyToManyField(related_name='todos', to='todo.banwords')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='todos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('completed_on__gt', models.F('started_on'))), name='completed_on_gt_started_on')],
            },
        ),
    ]
